// Generated from BooleanMath.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class BooleanMathLexer extends Lexer {
	public static readonly COLON = 1;
	public static readonly TRUE = 2;
	public static readonly FALSE = 3;
	public static readonly CONCAT = 4;
	public static readonly REPEAT = 5;
	public static readonly PLUS = 6;
	public static readonly MINUS = 7;
	public static readonly TIMES = 8;
	public static readonly DIV = 9;
	public static readonly POW = 10;
	public static readonly SQRT = 11;
	public static readonly CUBE = 12;
	public static readonly SUM = 13;
	public static readonly AVERAGE = 14;
	public static readonly MIN = 15;
	public static readonly MAX = 16;
	public static readonly OPERATORMINMIN = 17;
	public static readonly OPERATORPLUSPLUS = 18;
	public static readonly LISTSEPARATOR = 19;
	public static readonly BEGINLIST = 20;
	public static readonly ENDLIST = 21;
	public static readonly WS = 22;
	public static readonly AND = 23;
	public static readonly OR = 24;
	public static readonly XOR = 25;
	public static readonly NOT = 26;
	public static readonly GT = 27;
	public static readonly GE = 28;
	public static readonly LT = 29;
	public static readonly LE = 30;
	public static readonly EQ = 31;
	public static readonly NEQ = 32;
	public static readonly APPROXIMATION = 33;
	public static readonly IN = 34;
	public static readonly LIKE = 35;
	public static readonly ISNULL = 36;
	public static readonly LPAREN = 37;
	public static readonly RPAREN = 38;
	public static readonly DECIMAL = 39;
	public static readonly IDENTIFIERCHARS = 40;
	public static readonly STRING = 41;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"COLON", "TRUE", "FALSE", "CONCAT", "REPEAT", "PLUS", "MINUS", "TIMES", 
		"DIV", "POW", "SQRT", "CUBE", "SUM", "AVERAGE", "MIN", "MAX", "OPERATORMINMIN", 
		"OPERATORPLUSPLUS", "LISTSEPARATOR", "BEGINLIST", "ENDLIST", "WS", "AND", 
		"OR", "XOR", "NOT", "GT", "GE", "LT", "LE", "EQ", "NEQ", "APPROXIMATION", 
		"IN", "LIKE", "ISNULL", "LPAREN", "RPAREN", "DECIMAL", "NUMERIC", "UNSIGNED_INTEGER", 
		"EXPONENT", "SIGN", "IDENTIFIERCHARS", "STRING", "A", "B", "C", "D", "E", 
		"F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", 
		"T", "U", "V", "W", "X", "Y", "Z",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "':'", undefined, undefined, undefined, undefined, "'+'", "'-'", 
		"'*'", "'/'", "'^'", undefined, undefined, undefined, undefined, undefined, 
		undefined, "'--'", "'++'", "','", "'['", "']'", undefined, undefined, 
		undefined, undefined, undefined, "'>'", "'>='", "'<'", "'<='", "'=='", 
		"'!='", "'~'", undefined, undefined, undefined, "'('", "')'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "COLON", "TRUE", "FALSE", "CONCAT", "REPEAT", "PLUS", "MINUS", 
		"TIMES", "DIV", "POW", "SQRT", "CUBE", "SUM", "AVERAGE", "MIN", "MAX", 
		"OPERATORMINMIN", "OPERATORPLUSPLUS", "LISTSEPARATOR", "BEGINLIST", "ENDLIST", 
		"WS", "AND", "OR", "XOR", "NOT", "GT", "GE", "LT", "LE", "EQ", "NEQ", 
		"APPROXIMATION", "IN", "LIKE", "ISNULL", "LPAREN", "RPAREN", "DECIMAL", 
		"IDENTIFIERCHARS", "STRING",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(BooleanMathLexer._LITERAL_NAMES, BooleanMathLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return BooleanMathLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(BooleanMathLexer._ATN, this);
	}

	// @Override
	public override get grammarFileName(): string { return "BooleanMath.g4"; }

	// @Override
	public override get ruleNames(): string[] { return BooleanMathLexer.ruleNames; }

	// @Override
	public override get serializedATN(): string { return BooleanMathLexer._serializedATN; }

	// @Override
	public override get channelNames(): string[] { return BooleanMathLexer.channelNames; }

	// @Override
	public override get modeNames(): string[] { return BooleanMathLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02+\u0184\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04" +
		"=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x04" +
		"F\tF\x04G\tG\x04H\tH\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03" +
		"\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03" +
		"\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03" +
		"\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03" +
		"\n\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03" +
		"\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03" +
		"\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x03\x11\x03" +
		"\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03" +
		"\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16\x03\x17\x06\x17\xE2\n\x17" +
		"\r\x17\x0E\x17\xE3\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18\x03" +
		"\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03" +
		"\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03" +
		"\x1F\x03\x1F\x03\x1F\x03 \x03 \x03 \x03!\x03!\x03!\x03\"\x03\"\x03#\x03" +
		"#\x03#\x03$\x03$\x03$\x03$\x03$\x03%\x03%\x03%\x07%\u0114\n%\f%\x0E%\u0117" +
		"\v%\x03%\x03%\x03%\x03%\x03%\x03&\x03&\x03\'\x03\'\x03(\x03(\x03(\x05" +
		"(\u0125\n(\x03(\x03(\x05(\u0129\n(\x03)\x06)\u012C\n)\r)\x0E)\u012D\x03" +
		")\x03)\x06)\u0132\n)\r)\x0E)\u0133\x05)\u0136\n)\x03*\x06*\u0139\n*\r" +
		"*\x0E*\u013A\x03+\x03+\x03,\x03,\x03-\x03-\x07-\u0143\n-\f-\x0E-\u0146" +
		"\v-\x03.\x03.\x07.\u014A\n.\f.\x0E.\u014D\v.\x03.\x03.\x03/\x03/\x030" +
		"\x030\x031\x031\x032\x032\x033\x033\x034\x034\x035\x035\x036\x036\x03" +
		"7\x037\x038\x038\x039\x039\x03:\x03:\x03;\x03;\x03<\x03<\x03=\x03=\x03" +
		">\x03>\x03?\x03?\x03@\x03@\x03A\x03A\x03B\x03B\x03C\x03C\x03D\x03D\x03" +
		"E\x03E\x03F\x03F\x03G\x03G\x03H\x03H\x03\u014B\x02\x02I\x03\x02\x03\x05" +
		"\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13" +
		"\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02" +
		"\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/" +
		"\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?" +
		"\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02)Q\x02\x02S\x02" +
		"\x02U\x02\x02W\x02\x02Y\x02*[\x02+]\x02\x02_\x02\x02a\x02\x02c\x02\x02" +
		"e\x02\x02g\x02\x02i\x02\x02k\x02\x02m\x02\x02o\x02\x02q\x02\x02s\x02\x02" +
		"u\x02\x02w\x02\x02y\x02\x02{\x02\x02}\x02\x02\x7F\x02\x02\x81\x02\x02" +
		"\x83\x02\x02\x85\x02\x02\x87\x02\x02\x89\x02\x02\x8B\x02\x02\x8D\x02\x02" +
		"\x8F\x02\x02\x03\x02\"\x05\x02\v\f\x0E\x0F\"\"\x04\x02GGgg\x04\x02--/" +
		"/\x05\x02C\\aac|\x06\x022;C\\aac|\x04\x02$$))\x05\x02CCcc~~\x05\x02DD" +
		"dd~~\x05\x02EEee~~\x05\x02FFff~~\x05\x02GGgg~~\x05\x02HHhh~~\x05\x02I" +
		"Iii~~\x05\x02JJjj~~\x05\x02KKkk~~\x05\x02LLll~~\x05\x02MMmm~~\x05\x02" +
		"NNnn~~\x05\x02OOoo~~\x05\x02PPpp~~\x05\x02QQqq~~\x05\x02RRrr~~\x05\x02" +
		"SSss~~\x05\x02TTtt~~\x05\x02UUuu~~\x05\x02VVvv~~\x05\x02WWww~~\x05\x02" +
		"XXxx~~\x05\x02YYyy~~\x05\x02ZZzz~~\x05\x02[[{{~~\x05\x02\\\\||~~\x02\u016F" +
		"\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02" +
		"\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02" +
		"\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02" +
		"\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02" +
		"\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02" +
		"!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03" +
		"\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02" +
		"\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x02" +
		"5\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02" +
		"\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02" +
		"\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03" +
		"\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02" +
		"\x02\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02\x03\x91\x03\x02\x02\x02" +
		"\x05\x93\x03\x02\x02\x02\x07\x98\x03\x02\x02\x02\t\x9E\x03\x02\x02\x02" +
		"\v\xA5\x03\x02\x02\x02\r\xAC\x03\x02\x02\x02\x0F\xAE\x03\x02\x02\x02\x11" +
		"\xB0\x03\x02\x02\x02\x13\xB2\x03\x02\x02\x02\x15\xB4\x03\x02\x02\x02\x17" +
		"\xB6\x03\x02\x02\x02\x19\xBB\x03\x02\x02\x02\x1B\xC0\x03\x02\x02\x02\x1D" +
		"\xC4\x03\x02\x02\x02\x1F\xCC\x03\x02\x02\x02!\xD0\x03\x02\x02\x02#\xD4" +
		"\x03\x02\x02\x02%\xD7\x03\x02\x02\x02\'\xDA\x03\x02\x02\x02)\xDC\x03\x02" +
		"\x02\x02+\xDE\x03\x02\x02\x02-\xE1\x03\x02\x02\x02/\xE7\x03\x02\x02\x02" +
		"1\xEB\x03\x02\x02\x023\xEE\x03\x02\x02\x025\xF2\x03\x02\x02\x027\xF6\x03" +
		"\x02\x02\x029\xF8\x03\x02\x02\x02;\xFB\x03\x02\x02\x02=\xFD\x03\x02\x02" +
		"\x02?\u0100\x03\x02\x02\x02A\u0103\x03\x02\x02\x02C\u0106\x03\x02\x02" +
		"\x02E\u0108\x03\x02\x02\x02G\u010B\x03\x02\x02\x02I\u0110\x03\x02\x02" +
		"\x02K\u011D\x03\x02\x02\x02M\u011F\x03\x02\x02\x02O\u0121\x03\x02\x02" +
		"\x02Q\u012B\x03\x02\x02\x02S\u0138\x03\x02\x02\x02U\u013C\x03\x02\x02" +
		"\x02W\u013E\x03\x02\x02\x02Y\u0140\x03\x02\x02\x02[\u0147\x03\x02\x02" +
		"\x02]\u0150\x03\x02\x02\x02_\u0152\x03\x02\x02\x02a\u0154\x03\x02\x02" +
		"\x02c\u0156\x03\x02\x02\x02e\u0158\x03\x02\x02\x02g\u015A\x03\x02\x02" +
		"\x02i\u015C\x03\x02\x02\x02k\u015E\x03\x02\x02\x02m\u0160\x03\x02\x02" +
		"\x02o\u0162\x03\x02\x02\x02q\u0164\x03\x02\x02\x02s\u0166\x03\x02\x02" +
		"\x02u\u0168\x03\x02\x02\x02w\u016A\x03\x02\x02\x02y\u016C\x03\x02\x02" +
		"\x02{\u016E\x03\x02\x02\x02}\u0170\x03\x02\x02\x02\x7F\u0172\x03\x02\x02" +
		"\x02\x81\u0174\x03\x02\x02\x02\x83\u0176\x03\x02\x02\x02\x85\u0178\x03" +
		"\x02\x02\x02\x87\u017A\x03\x02\x02\x02\x89\u017C\x03\x02\x02\x02\x8B\u017E" +
		"\x03\x02\x02\x02\x8D\u0180\x03\x02\x02\x02\x8F\u0182\x03\x02\x02\x02\x91" +
		"\x92\x07<\x02\x02\x92\x04\x03\x02\x02\x02\x93\x94\x05\x83B\x02\x94\x95" +
		"\x05\x7F@\x02\x95\x96\x05\x85C\x02\x96\x97\x05e3\x02\x97\x06\x03\x02\x02" +
		"\x02\x98\x99\x05g4\x02\x99\x9A\x05]/\x02\x9A\x9B\x05s:\x02\x9B\x9C\x05" +
		"\x81A\x02\x9C\x9D\x05e3\x02\x9D\b\x03\x02\x02\x02\x9E\x9F\x05a1\x02\x9F" +
		"\xA0\x05y=\x02\xA0\xA1\x05w<\x02\xA1\xA2\x05a1\x02\xA2\xA3\x05]/\x02\xA3" +
		"\xA4\x05\x83B\x02\xA4\n\x03\x02\x02\x02\xA5\xA6\x05\x7F@\x02\xA6\xA7\x05" +
		"e3\x02\xA7\xA8\x05{>\x02\xA8\xA9\x05e3\x02\xA9\xAA\x05]/\x02\xAA\xAB\x05" +
		"\x83B\x02\xAB\f\x03\x02\x02\x02\xAC\xAD\x07-\x02\x02\xAD\x0E\x03\x02\x02" +
		"\x02\xAE\xAF\x07/\x02\x02\xAF\x10\x03\x02\x02\x02\xB0\xB1\x07,\x02\x02" +
		"\xB1\x12\x03\x02\x02\x02\xB2\xB3\x071\x02\x02\xB3\x14\x03\x02\x02\x02" +
		"\xB4\xB5\x07`\x02\x02\xB5\x16\x03\x02\x02\x02\xB6\xB7\x05\x81A\x02\xB7" +
		"\xB8\x05}?\x02\xB8\xB9\x05\x7F@\x02\xB9\xBA\x05\x83B\x02\xBA\x18\x03\x02" +
		"\x02\x02\xBB\xBC\x05a1\x02\xBC\xBD\x05\x85C\x02\xBD\xBE\x05_0\x02\xBE" +
		"\xBF\x05e3\x02\xBF\x1A\x03\x02\x02\x02\xC0\xC1\x05\x81A\x02\xC1\xC2\x05" +
		"\x85C\x02\xC2\xC3\x05u;\x02\xC3\x1C\x03\x02\x02\x02\xC4\xC5\x05]/\x02" +
		"\xC5\xC6\x05\x87D\x02\xC6\xC7\x05e3\x02\xC7\xC8\x05\x7F@\x02\xC8\xC9\x05" +
		"]/\x02\xC9\xCA\x05i5\x02\xCA\xCB\x05e3\x02\xCB\x1E\x03\x02\x02\x02\xCC" +
		"\xCD\x05u;\x02\xCD\xCE\x05m7\x02\xCE\xCF\x05w<\x02\xCF \x03\x02\x02\x02" +
		"\xD0\xD1\x05u;\x02\xD1\xD2\x05]/\x02\xD2\xD3\x05\x8BF\x02\xD3\"\x03\x02" +
		"\x02\x02\xD4\xD5\x07/\x02\x02\xD5\xD6\x07/\x02\x02\xD6$\x03\x02\x02\x02" +
		"\xD7\xD8\x07-\x02\x02\xD8\xD9\x07-\x02\x02\xD9&\x03\x02\x02\x02\xDA\xDB" +
		"\x07.\x02\x02\xDB(\x03\x02\x02\x02\xDC\xDD\x07]\x02\x02\xDD*\x03\x02\x02" +
		"\x02\xDE\xDF\x07_\x02\x02\xDF,\x03\x02\x02\x02\xE0\xE2\t\x02\x02\x02\xE1" +
		"\xE0\x03\x02\x02\x02\xE2\xE3\x03\x02\x02\x02\xE3\xE1\x03\x02\x02\x02\xE3" +
		"\xE4\x03\x02\x02\x02\xE4\xE5\x03\x02\x02\x02\xE5\xE6\b\x17\x02\x02\xE6" +
		".\x03\x02\x02\x02\xE7\xE8\x05]/\x02\xE8\xE9\x05w<\x02\xE9\xEA\x05c2\x02" +
		"\xEA0\x03\x02\x02\x02\xEB\xEC\x05y=\x02\xEC\xED\x05\x7F@\x02\xED2\x03" +
		"\x02\x02\x02\xEE\xEF\x05\x8BF\x02\xEF\xF0\x05y=\x02\xF0\xF1\x05\x7F@\x02" +
		"\xF14\x03\x02\x02\x02\xF2\xF3\x05w<\x02\xF3\xF4\x05y=\x02\xF4\xF5\x05" +
		"\x83B\x02\xF56\x03\x02\x02\x02\xF6\xF7\x07@\x02\x02\xF78\x03\x02\x02\x02" +
		"\xF8\xF9\x07@\x02\x02\xF9\xFA\x07?\x02\x02\xFA:\x03\x02\x02\x02\xFB\xFC" +
		"\x07>\x02\x02\xFC<\x03\x02\x02\x02\xFD\xFE\x07>\x02\x02\xFE\xFF\x07?\x02" +
		"\x02\xFF>\x03\x02\x02\x02\u0100\u0101\x07?\x02\x02\u0101\u0102\x07?\x02" +
		"\x02\u0102@\x03\x02\x02\x02\u0103\u0104\x07#\x02\x02\u0104\u0105\x07?" +
		"\x02\x02\u0105B\x03\x02\x02\x02\u0106\u0107\x07\x80\x02\x02\u0107D\x03" +
		"\x02\x02\x02\u0108\u0109\x05m7\x02\u0109\u010A\x05w<\x02\u010AF\x03\x02" +
		"\x02\x02\u010B\u010C\x05s:\x02\u010C\u010D\x05m7\x02\u010D\u010E\x05q" +
		"9\x02\u010E\u010F\x05e3\x02\u010FH\x03\x02\x02\x02\u0110\u0111\x05m7\x02" +
		"\u0111\u0115\x05\x81A\x02\u0112\u0114\x05-\x17\x02\u0113\u0112\x03\x02" +
		"\x02\x02\u0114\u0117\x03\x02\x02\x02\u0115\u0113\x03\x02\x02\x02\u0115" +
		"\u0116\x03\x02\x02\x02\u0116\u0118\x03\x02\x02\x02\u0117\u0115\x03\x02" +
		"\x02\x02\u0118\u0119\x05w<\x02\u0119\u011A\x05\x85C\x02\u011A\u011B\x05" +
		"s:\x02\u011B\u011C\x05s:\x02\u011CJ\x03\x02\x02\x02\u011D\u011E\x07*\x02" +
		"\x02\u011EL\x03\x02\x02\x02\u011F\u0120\x07+\x02\x02\u0120N\x03\x02\x02" +
		"\x02\u0121\u0128\x05Q)\x02\u0122\u0124\x05U+\x02\u0123\u0125\x05W,\x02" +
		"\u0124\u0123\x03\x02\x02\x02\u0124\u0125\x03\x02\x02\x02\u0125\u0126\x03" +
		"\x02\x02\x02\u0126\u0127\x05S*\x02\u0127\u0129\x03\x02\x02\x02\u0128\u0122" +
		"\x03\x02\x02\x02\u0128\u0129\x03\x02\x02\x02\u0129P\x03\x02\x02\x02\u012A" +
		"\u012C\x042;\x02\u012B\u012A\x03\x02\x02\x02\u012C\u012D\x03\x02\x02\x02" +
		"\u012D\u012B\x03\x02\x02\x02\u012D\u012E\x03\x02\x02\x02\u012E\u0135\x03" +
		"\x02\x02\x02\u012F\u0131\x070\x02\x02\u0130\u0132\x042;\x02\u0131\u0130" +
		"\x03\x02\x02\x02\u0132\u0133\x03\x02\x02\x02\u0133\u0131\x03\x02\x02\x02" +
		"\u0133\u0134\x03\x02\x02\x02\u0134\u0136\x03\x02\x02\x02\u0135\u012F\x03" +
		"\x02\x02\x02\u0135\u0136\x03\x02\x02\x02\u0136R\x03\x02\x02\x02\u0137" +
		"\u0139\x042;\x02\u0138\u0137\x03\x02\x02\x02\u0139\u013A\x03\x02\x02\x02" +
		"\u013A\u0138\x03\x02\x02\x02\u013A\u013B\x03\x02\x02\x02\u013BT\x03\x02" +
		"\x02\x02\u013C\u013D\t\x03\x02\x02\u013DV\x03\x02\x02\x02\u013E\u013F" +
		"\t\x04\x02\x02\u013FX\x03\x02\x02\x02\u0140\u0144\t\x05\x02\x02\u0141" +
		"\u0143\t\x06\x02\x02\u0142\u0141\x03\x02\x02\x02\u0143\u0146\x03\x02\x02" +
		"\x02\u0144\u0142\x03\x02\x02\x02\u0144\u0145\x03\x02\x02\x02\u0145Z\x03" +
		"\x02\x02\x02\u0146\u0144\x03\x02\x02\x02\u0147\u014B\t\x07\x02\x02\u0148" +
		"\u014A\v\x02\x02\x02\u0149\u0148\x03\x02\x02\x02\u014A\u014D\x03\x02\x02" +
		"\x02\u014B\u014C\x03\x02\x02\x02\u014B\u0149\x03\x02\x02\x02\u014C\u014E" +
		"\x03\x02\x02\x02\u014D\u014B\x03\x02\x02\x02\u014E\u014F\t\x07\x02\x02" +
		"\u014F\\\x03\x02\x02\x02\u0150\u0151\t\b\x02\x02\u0151^\x03\x02\x02\x02" +
		"\u0152\u0153\t\t\x02\x02\u0153`\x03\x02\x02\x02\u0154\u0155\t\n\x02\x02" +
		"\u0155b\x03\x02\x02\x02\u0156\u0157\t\v\x02\x02\u0157d\x03\x02\x02\x02" +
		"\u0158\u0159\t\f\x02\x02\u0159f\x03\x02\x02\x02\u015A\u015B\t\r\x02\x02" +
		"\u015Bh\x03\x02\x02\x02\u015C\u015D\t\x0E\x02\x02\u015Dj\x03\x02\x02\x02" +
		"\u015E\u015F\t\x0F\x02\x02\u015Fl\x03\x02\x02\x02\u0160\u0161\t\x10\x02" +
		"\x02\u0161n\x03\x02\x02\x02\u0162\u0163\t\x11\x02\x02\u0163p\x03\x02\x02" +
		"\x02\u0164\u0165\t\x12\x02\x02\u0165r\x03\x02\x02\x02\u0166\u0167\t\x13" +
		"\x02\x02\u0167t\x03\x02\x02\x02\u0168\u0169\t\x14\x02\x02\u0169v\x03\x02" +
		"\x02\x02\u016A\u016B\t\x15\x02\x02\u016Bx\x03\x02\x02\x02\u016C\u016D" +
		"\t\x16\x02\x02\u016Dz\x03\x02\x02\x02\u016E\u016F\t\x17\x02\x02\u016F" +
		"|\x03\x02\x02\x02\u0170\u0171\t\x18\x02\x02\u0171~\x03\x02\x02\x02\u0172" +
		"\u0173\t\x19\x02\x02\u0173\x80\x03\x02\x02\x02\u0174\u0175\t\x1A\x02\x02" +
		"\u0175\x82\x03\x02\x02\x02\u0176\u0177\t\x1B\x02\x02\u0177\x84\x03\x02" +
		"\x02\x02\u0178\u0179\t\x1C\x02\x02\u0179\x86\x03\x02\x02\x02\u017A\u017B" +
		"\t\x1D\x02\x02\u017B\x88\x03\x02\x02\x02\u017C\u017D\t\x1E\x02\x02\u017D" +
		"\x8A\x03\x02\x02\x02\u017E\u017F\t\x1F\x02\x02\u017F\x8C\x03\x02\x02\x02" +
		"\u0180\u0181\t \x02\x02\u0181\x8E\x03\x02\x02\x02\u0182\u0183\t!\x02\x02" +
		"\u0183\x90\x03\x02\x02\x02\r\x02\xE3\u0115\u0124\u0128\u012D\u0133\u0135" +
		"\u013A\u0144\u014B\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!BooleanMathLexer.__ATN) {
			BooleanMathLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(BooleanMathLexer._serializedATN));
		}

		return BooleanMathLexer.__ATN;
	}

}

