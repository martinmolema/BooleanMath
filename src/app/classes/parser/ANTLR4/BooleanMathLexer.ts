// Generated from BooleanMath.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class BooleanMathLexer extends Lexer {
	public static readonly COLON = 1;
	public static readonly TRUE = 2;
	public static readonly FALSE = 3;
	public static readonly CONCAT = 4;
	public static readonly PLUS = 5;
	public static readonly MINUS = 6;
	public static readonly TIMES = 7;
	public static readonly DIV = 8;
	public static readonly POW = 9;
	public static readonly SQRT = 10;
	public static readonly CUBE = 11;
	public static readonly SUM = 12;
	public static readonly AVERAGE = 13;
	public static readonly MIN = 14;
	public static readonly MAX = 15;
	public static readonly OPERATORMINMIN = 16;
	public static readonly OPERATORPLUSPLUS = 17;
	public static readonly LISTSEPERATOR = 18;
	public static readonly BEGINLIST = 19;
	public static readonly ENDLIST = 20;
	public static readonly WS = 21;
	public static readonly AND = 22;
	public static readonly OR = 23;
	public static readonly XOR = 24;
	public static readonly NOT = 25;
	public static readonly GT = 26;
	public static readonly GE = 27;
	public static readonly LT = 28;
	public static readonly LE = 29;
	public static readonly EQ = 30;
	public static readonly NEQ = 31;
	public static readonly APPROXIMATION = 32;
	public static readonly IN = 33;
	public static readonly LIKE = 34;
	public static readonly ISNULL = 35;
	public static readonly LPAREN = 36;
	public static readonly RPAREN = 37;
	public static readonly DECIMAL = 38;
	public static readonly IDENTIFIERCHARS = 39;
	public static readonly STRING = 40;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"COLON", "TRUE", "FALSE", "CONCAT", "PLUS", "MINUS", "TIMES", "DIV", "POW", 
		"SQRT", "CUBE", "SUM", "AVERAGE", "MIN", "MAX", "OPERATORMINMIN", "OPERATORPLUSPLUS", 
		"LISTSEPERATOR", "BEGINLIST", "ENDLIST", "WS", "AND", "OR", "XOR", "NOT", 
		"GT", "GE", "LT", "LE", "EQ", "NEQ", "APPROXIMATION", "IN", "LIKE", "ISNULL", 
		"LPAREN", "RPAREN", "DECIMAL", "NUMERIC", "UNSIGNED_INTEGER", "EXPONENT", 
		"SIGN", "IDENTIFIERCHARS", "STRING", "A", "B", "C", "D", "E", "F", "G", 
		"H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", 
		"V", "W", "X", "Y", "Z",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "':'", undefined, undefined, undefined, "'+'", "'-'", "'*'", 
		"'/'", "'^'", undefined, undefined, undefined, undefined, undefined, undefined, 
		"'--'", "'++'", "','", "'['", "']'", undefined, undefined, undefined, 
		undefined, undefined, "'>'", "'>='", "'<'", "'<='", "'=='", "'!='", "'~'", 
		undefined, undefined, undefined, "'('", "')'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "COLON", "TRUE", "FALSE", "CONCAT", "PLUS", "MINUS", "TIMES", 
		"DIV", "POW", "SQRT", "CUBE", "SUM", "AVERAGE", "MIN", "MAX", "OPERATORMINMIN", 
		"OPERATORPLUSPLUS", "LISTSEPERATOR", "BEGINLIST", "ENDLIST", "WS", "AND", 
		"OR", "XOR", "NOT", "GT", "GE", "LT", "LE", "EQ", "NEQ", "APPROXIMATION", 
		"IN", "LIKE", "ISNULL", "LPAREN", "RPAREN", "DECIMAL", "IDENTIFIERCHARS", 
		"STRING",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(BooleanMathLexer._LITERAL_NAMES, BooleanMathLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return BooleanMathLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(BooleanMathLexer._ATN, this);
	}

	// @Override
	public override get grammarFileName(): string { return "BooleanMath.g4"; }

	// @Override
	public override get ruleNames(): string[] { return BooleanMathLexer.ruleNames; }

	// @Override
	public override get serializedATN(): string { return BooleanMathLexer._serializedATN; }

	// @Override
	public override get channelNames(): string[] { return BooleanMathLexer.channelNames; }

	// @Override
	public override get modeNames(): string[] { return BooleanMathLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02*\u017B\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04" +
		"=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x04" +
		"F\tF\x04G\tG\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03" +
		"\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03" +
		"\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03" +
		"\b\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03" +
		"\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E" +
		"\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10" +
		"\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12" +
		"\x03\x13\x03\x13\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16\x06\x16\xD9\n" +
		"\x16\r\x16\x0E\x16\xDA\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17\x03\x17" +
		"\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x19\x03\x1A\x03\x1A" +
		"\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D" +
		"\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03 \x03 \x03 \x03!\x03" +
		"!\x03\"\x03\"\x03\"\x03#\x03#\x03#\x03#\x03#\x03$\x03$\x03$\x07$\u010B" +
		"\n$\f$\x0E$\u010E\v$\x03$\x03$\x03$\x03$\x03$\x03%\x03%\x03&\x03&\x03" +
		"\'\x03\'\x03\'\x05\'\u011C\n\'\x03\'\x03\'\x05\'\u0120\n\'\x03(\x06(\u0123" +
		"\n(\r(\x0E(\u0124\x03(\x03(\x06(\u0129\n(\r(\x0E(\u012A\x05(\u012D\n(" +
		"\x03)\x06)\u0130\n)\r)\x0E)\u0131\x03*\x03*\x03+\x03+\x03,\x03,\x07,\u013A" +
		"\n,\f,\x0E,\u013D\v,\x03-\x03-\x07-\u0141\n-\f-\x0E-\u0144\v-\x03-\x03" +
		"-\x03.\x03.\x03/\x03/\x030\x030\x031\x031\x032\x032\x033\x033\x034\x03" +
		"4\x035\x035\x036\x036\x037\x037\x038\x038\x039\x039\x03:\x03:\x03;\x03" +
		";\x03<\x03<\x03=\x03=\x03>\x03>\x03?\x03?\x03@\x03@\x03A\x03A\x03B\x03" +
		"B\x03C\x03C\x03D\x03D\x03E\x03E\x03F\x03F\x03G\x03G\x03\u0142\x02\x02" +
		"H\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F" +
		"\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F" +
		"\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16" +
		"+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E" +
		";\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02" +
		"\x02Q\x02\x02S\x02\x02U\x02\x02W\x02)Y\x02*[\x02\x02]\x02\x02_\x02\x02" +
		"a\x02\x02c\x02\x02e\x02\x02g\x02\x02i\x02\x02k\x02\x02m\x02\x02o\x02\x02" +
		"q\x02\x02s\x02\x02u\x02\x02w\x02\x02y\x02\x02{\x02\x02}\x02\x02\x7F\x02" +
		"\x02\x81\x02\x02\x83\x02\x02\x85\x02\x02\x87\x02\x02\x89\x02\x02\x8B\x02" +
		"\x02\x8D\x02\x02\x03\x02\"\x05\x02\v\f\x0E\x0F\"\"\x04\x02GGgg\x04\x02" +
		"--//\x05\x02C\\aac|\x06\x022;C\\aac|\x04\x02$$))\x05\x02CCcc~~\x05\x02" +
		"DDdd~~\x05\x02EEee~~\x05\x02FFff~~\x05\x02GGgg~~\x05\x02HHhh~~\x05\x02" +
		"IIii~~\x05\x02JJjj~~\x05\x02KKkk~~\x05\x02LLll~~\x05\x02MMmm~~\x05\x02" +
		"NNnn~~\x05\x02OOoo~~\x05\x02PPpp~~\x05\x02QQqq~~\x05\x02RRrr~~\x05\x02" +
		"SSss~~\x05\x02TTtt~~\x05\x02UUuu~~\x05\x02VVvv~~\x05\x02WWww~~\x05\x02" +
		"XXxx~~\x05\x02YYyy~~\x05\x02ZZzz~~\x05\x02[[{{~~\x05\x02\\\\||~~\x02\u0166" +
		"\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02" +
		"\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02" +
		"\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02" +
		"\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02" +
		"\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02" +
		"!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03" +
		"\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02" +
		"\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x02" +
		"5\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02" +
		"\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02" +
		"\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03" +
		"\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02W\x03\x02\x02" +
		"\x02\x02Y\x03\x02\x02\x02\x03\x8F\x03\x02\x02\x02\x05\x91\x03\x02\x02" +
		"\x02\x07\x96\x03\x02\x02\x02\t\x9C\x03\x02\x02\x02\v\xA3\x03\x02\x02\x02" +
		"\r\xA5\x03\x02\x02\x02\x0F\xA7\x03\x02\x02\x02\x11\xA9\x03\x02\x02\x02" +
		"\x13\xAB\x03\x02\x02\x02\x15\xAD\x03\x02\x02\x02\x17\xB2\x03\x02\x02\x02" +
		"\x19\xB7\x03\x02\x02\x02\x1B\xBB\x03\x02\x02\x02\x1D\xC3\x03\x02\x02\x02" +
		"\x1F\xC7\x03\x02\x02\x02!\xCB\x03\x02\x02\x02#\xCE\x03\x02\x02\x02%\xD1" +
		"\x03\x02\x02\x02\'\xD3\x03\x02\x02\x02)\xD5\x03\x02\x02\x02+\xD8\x03\x02" +
		"\x02\x02-\xDE\x03\x02\x02\x02/\xE2\x03\x02\x02\x021\xE5\x03\x02\x02\x02" +
		"3\xE9\x03\x02\x02\x025\xED\x03\x02\x02\x027\xEF\x03\x02\x02\x029\xF2\x03" +
		"\x02\x02\x02;\xF4\x03\x02\x02\x02=\xF7\x03\x02\x02\x02?\xFA\x03\x02\x02" +
		"\x02A\xFD\x03\x02\x02\x02C\xFF\x03\x02\x02\x02E\u0102\x03\x02\x02\x02" +
		"G\u0107\x03\x02\x02\x02I\u0114\x03\x02\x02\x02K\u0116\x03\x02\x02\x02" +
		"M\u0118\x03\x02\x02\x02O\u0122\x03\x02\x02\x02Q\u012F\x03\x02\x02\x02" +
		"S\u0133\x03\x02\x02\x02U\u0135\x03\x02\x02\x02W\u0137\x03\x02\x02\x02" +
		"Y\u013E\x03\x02\x02\x02[\u0147\x03\x02\x02\x02]\u0149\x03\x02\x02\x02" +
		"_\u014B\x03\x02\x02\x02a\u014D\x03\x02\x02\x02c\u014F\x03\x02\x02\x02" +
		"e\u0151\x03\x02\x02\x02g\u0153\x03\x02\x02\x02i\u0155\x03\x02\x02\x02" +
		"k\u0157\x03\x02\x02\x02m\u0159\x03\x02\x02\x02o\u015B\x03\x02\x02\x02" +
		"q\u015D\x03\x02\x02\x02s\u015F\x03\x02\x02\x02u\u0161\x03\x02\x02\x02" +
		"w\u0163\x03\x02\x02\x02y\u0165\x03\x02\x02\x02{\u0167\x03\x02\x02\x02" +
		"}\u0169\x03\x02\x02\x02\x7F\u016B\x03\x02\x02\x02\x81\u016D\x03\x02\x02" +
		"\x02\x83\u016F\x03\x02\x02\x02\x85\u0171\x03\x02\x02\x02\x87\u0173\x03" +
		"\x02\x02\x02\x89\u0175\x03\x02\x02\x02\x8B\u0177\x03\x02\x02\x02\x8D\u0179" +
		"\x03\x02\x02\x02\x8F\x90\x07<\x02\x02\x90\x04\x03\x02\x02\x02\x91\x92" +
		"\x05\x81A\x02\x92\x93\x05}?\x02\x93\x94\x05\x83B\x02\x94\x95\x05c2\x02" +
		"\x95\x06\x03\x02\x02\x02\x96\x97\x05e3\x02\x97\x98\x05[.\x02\x98\x99\x05" +
		"q9\x02\x99\x9A\x05\x7F@\x02\x9A\x9B\x05c2\x02\x9B\b\x03\x02\x02\x02\x9C" +
		"\x9D\x05_0\x02\x9D\x9E\x05w<\x02\x9E\x9F\x05u;\x02\x9F\xA0\x05_0\x02\xA0" +
		"\xA1\x05[.\x02\xA1\xA2\x05\x81A\x02\xA2\n\x03\x02\x02\x02\xA3\xA4\x07" +
		"-\x02\x02\xA4\f\x03\x02\x02\x02\xA5\xA6\x07/\x02\x02\xA6\x0E\x03\x02\x02" +
		"\x02\xA7\xA8\x07,\x02\x02\xA8\x10\x03\x02\x02\x02\xA9\xAA\x071\x02\x02" +
		"\xAA\x12\x03\x02\x02\x02\xAB\xAC\x07`\x02\x02\xAC\x14\x03\x02\x02\x02" +
		"\xAD\xAE\x05\x7F@\x02\xAE\xAF\x05{>\x02\xAF\xB0\x05}?\x02\xB0\xB1\x05" +
		"\x81A\x02\xB1\x16\x03\x02\x02\x02\xB2\xB3\x05_0\x02\xB3\xB4\x05\x83B\x02" +
		"\xB4\xB5\x05]/\x02\xB5\xB6\x05c2\x02\xB6\x18\x03\x02\x02\x02\xB7\xB8\x05" +
		"\x7F@\x02\xB8\xB9\x05\x83B\x02\xB9\xBA\x05s:\x02\xBA\x1A\x03\x02\x02\x02" +
		"\xBB\xBC\x05[.\x02\xBC\xBD\x05\x85C\x02\xBD\xBE\x05c2\x02\xBE\xBF\x05" +
		"}?\x02\xBF\xC0\x05[.\x02\xC0\xC1\x05g4\x02\xC1\xC2\x05c2\x02\xC2\x1C\x03" +
		"\x02\x02\x02\xC3\xC4\x05s:\x02\xC4\xC5\x05k6\x02\xC5\xC6\x05u;\x02\xC6" +
		"\x1E\x03\x02\x02\x02\xC7\xC8\x05s:\x02\xC8\xC9\x05[.\x02\xC9\xCA\x05\x89" +
		"E\x02\xCA \x03\x02\x02\x02\xCB\xCC\x07/\x02\x02\xCC\xCD\x07/\x02\x02\xCD" +
		"\"\x03\x02\x02\x02\xCE\xCF\x07-\x02\x02\xCF\xD0\x07-\x02\x02\xD0$\x03" +
		"\x02\x02\x02\xD1\xD2\x07.\x02\x02\xD2&\x03\x02\x02\x02\xD3\xD4\x07]\x02" +
		"\x02\xD4(\x03\x02\x02\x02\xD5\xD6\x07_\x02\x02\xD6*\x03\x02\x02\x02\xD7" +
		"\xD9\t\x02\x02\x02\xD8\xD7\x03\x02\x02\x02\xD9\xDA\x03\x02\x02\x02\xDA" +
		"\xD8\x03\x02\x02\x02\xDA\xDB\x03\x02\x02\x02\xDB\xDC\x03\x02\x02\x02\xDC" +
		"\xDD\b\x16\x02\x02\xDD,\x03\x02\x02\x02\xDE\xDF\x05[.\x02\xDF\xE0\x05" +
		"u;\x02\xE0\xE1\x05a1\x02\xE1.\x03\x02\x02\x02\xE2\xE3\x05w<\x02\xE3\xE4" +
		"\x05}?\x02\xE40\x03\x02\x02\x02\xE5\xE6\x05\x89E\x02\xE6\xE7\x05w<\x02" +
		"\xE7\xE8\x05}?\x02\xE82\x03\x02\x02\x02\xE9\xEA\x05u;\x02\xEA\xEB\x05" +
		"w<\x02\xEB\xEC\x05\x81A\x02\xEC4\x03\x02\x02\x02\xED\xEE\x07@\x02\x02" +
		"\xEE6\x03\x02\x02\x02\xEF\xF0\x07@\x02\x02\xF0\xF1\x07?\x02\x02\xF18\x03" +
		"\x02\x02\x02\xF2\xF3\x07>\x02\x02\xF3:\x03\x02\x02\x02\xF4\xF5\x07>\x02" +
		"\x02\xF5\xF6\x07?\x02\x02\xF6<\x03\x02\x02\x02\xF7\xF8\x07?\x02\x02\xF8" +
		"\xF9\x07?\x02\x02\xF9>\x03\x02\x02\x02\xFA\xFB\x07#\x02\x02\xFB\xFC\x07" +
		"?\x02\x02\xFC@\x03\x02\x02\x02\xFD\xFE\x07\x80\x02\x02\xFEB\x03\x02\x02" +
		"\x02\xFF\u0100\x05k6\x02\u0100\u0101\x05u;\x02\u0101D\x03\x02\x02\x02" +
		"\u0102\u0103\x05q9\x02\u0103\u0104\x05k6\x02\u0104\u0105\x05o8\x02\u0105" +
		"\u0106\x05c2\x02\u0106F\x03\x02\x02\x02\u0107\u0108\x05k6\x02\u0108\u010C" +
		"\x05\x7F@\x02\u0109\u010B\x05+\x16\x02\u010A\u0109\x03\x02\x02\x02\u010B" +
		"\u010E\x03\x02\x02\x02\u010C\u010A\x03\x02\x02\x02\u010C\u010D\x03\x02" +
		"\x02\x02\u010D\u010F\x03\x02\x02\x02\u010E\u010C\x03\x02\x02\x02\u010F" +
		"\u0110\x05u;\x02\u0110\u0111\x05\x83B\x02\u0111\u0112\x05q9\x02\u0112" +
		"\u0113\x05q9\x02\u0113H\x03\x02\x02\x02\u0114\u0115\x07*\x02\x02\u0115" +
		"J\x03\x02\x02\x02\u0116\u0117\x07+\x02\x02\u0117L\x03\x02\x02\x02\u0118" +
		"\u011F\x05O(\x02\u0119\u011B\x05S*\x02\u011A\u011C\x05U+\x02\u011B\u011A" +
		"\x03\x02\x02\x02\u011B\u011C\x03\x02\x02\x02\u011C\u011D\x03\x02\x02\x02" +
		"\u011D\u011E\x05Q)\x02\u011E\u0120\x03\x02\x02\x02\u011F\u0119\x03\x02" +
		"\x02\x02\u011F\u0120\x03\x02\x02\x02\u0120N\x03\x02\x02\x02\u0121\u0123" +
		"\x042;\x02\u0122\u0121\x03\x02\x02\x02\u0123\u0124\x03\x02\x02\x02\u0124" +
		"\u0122\x03\x02\x02\x02\u0124\u0125\x03\x02\x02\x02\u0125\u012C\x03\x02" +
		"\x02\x02\u0126\u0128\x070\x02\x02\u0127\u0129\x042;\x02\u0128\u0127\x03" +
		"\x02\x02\x02\u0129\u012A\x03\x02\x02\x02\u012A\u0128\x03\x02\x02\x02\u012A" +
		"\u012B\x03\x02\x02\x02\u012B\u012D\x03\x02\x02\x02\u012C\u0126\x03\x02" +
		"\x02\x02\u012C\u012D\x03\x02\x02\x02\u012DP\x03\x02\x02\x02\u012E\u0130" +
		"\x042;\x02\u012F\u012E\x03\x02\x02\x02\u0130\u0131\x03\x02\x02\x02\u0131" +
		"\u012F\x03\x02\x02\x02\u0131\u0132\x03\x02\x02\x02\u0132R\x03\x02\x02" +
		"\x02\u0133\u0134\t\x03\x02\x02\u0134T\x03\x02\x02\x02\u0135\u0136\t\x04" +
		"\x02\x02\u0136V\x03\x02\x02\x02\u0137\u013B\t\x05\x02\x02\u0138\u013A" +
		"\t\x06\x02\x02\u0139\u0138\x03\x02\x02\x02\u013A\u013D\x03\x02\x02\x02" +
		"\u013B\u0139\x03\x02\x02\x02\u013B\u013C\x03\x02\x02\x02\u013CX\x03\x02" +
		"\x02\x02\u013D\u013B\x03\x02\x02\x02\u013E\u0142\t\x07\x02\x02\u013F\u0141" +
		"\v\x02\x02\x02\u0140\u013F\x03\x02\x02\x02\u0141\u0144\x03\x02\x02\x02" +
		"\u0142\u0143\x03\x02\x02\x02\u0142\u0140\x03\x02\x02\x02\u0143\u0145\x03" +
		"\x02\x02\x02\u0144\u0142\x03\x02\x02\x02\u0145\u0146\t\x07\x02\x02\u0146" +
		"Z\x03\x02\x02\x02\u0147\u0148\t\b\x02\x02\u0148\\\x03\x02\x02\x02\u0149" +
		"\u014A\t\t\x02\x02\u014A^\x03\x02\x02\x02\u014B\u014C\t\n\x02\x02\u014C" +
		"`\x03\x02\x02\x02\u014D\u014E\t\v\x02\x02\u014Eb\x03\x02\x02\x02\u014F" +
		"\u0150\t\f\x02\x02\u0150d\x03\x02\x02\x02\u0151\u0152\t\r\x02\x02\u0152" +
		"f\x03\x02\x02\x02\u0153\u0154\t\x0E\x02\x02\u0154h\x03\x02\x02\x02\u0155" +
		"\u0156\t\x0F\x02\x02\u0156j\x03\x02\x02\x02\u0157\u0158\t\x10\x02\x02" +
		"\u0158l\x03\x02\x02\x02\u0159\u015A\t\x11\x02\x02\u015An\x03\x02\x02\x02" +
		"\u015B\u015C\t\x12\x02\x02\u015Cp\x03\x02\x02\x02\u015D\u015E\t\x13\x02" +
		"\x02\u015Er\x03\x02\x02\x02\u015F\u0160\t\x14\x02\x02\u0160t\x03\x02\x02" +
		"\x02\u0161\u0162\t\x15\x02\x02\u0162v\x03\x02\x02\x02\u0163\u0164\t\x16" +
		"\x02\x02\u0164x\x03\x02\x02\x02\u0165\u0166\t\x17\x02\x02\u0166z\x03\x02" +
		"\x02\x02\u0167\u0168\t\x18\x02\x02\u0168|\x03\x02\x02\x02\u0169\u016A" +
		"\t\x19\x02\x02\u016A~\x03\x02\x02\x02\u016B\u016C\t\x1A\x02\x02\u016C" +
		"\x80\x03\x02\x02\x02\u016D\u016E\t\x1B\x02\x02\u016E\x82\x03\x02\x02\x02" +
		"\u016F\u0170\t\x1C\x02\x02\u0170\x84\x03\x02\x02\x02\u0171\u0172\t\x1D" +
		"\x02\x02\u0172\x86\x03\x02\x02\x02\u0173\u0174\t\x1E\x02\x02\u0174\x88" +
		"\x03\x02\x02\x02\u0175\u0176\t\x1F\x02\x02\u0176\x8A\x03\x02\x02\x02\u0177" +
		"\u0178\t \x02\x02\u0178\x8C\x03\x02\x02\x02\u0179\u017A\t!\x02\x02\u017A" +
		"\x8E\x03\x02\x02\x02\r\x02\xDA\u010C\u011B\u011F\u0124\u012A\u012C\u0131" +
		"\u013B\u0142\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!BooleanMathLexer.__ATN) {
			BooleanMathLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(BooleanMathLexer._serializedATN));
		}

		return BooleanMathLexer.__ATN;
	}

}

